{"version":3,"sources":["components/SearchBar.js","components/Card.js","components/WeatherList.js","components/App.js","index.js"],"names":["SearchBar","handleFormSubmit","event","preventDefault","onSubmit","this","className","onKeyPress","key","props","getCity","type","placeholder","Component","Card","column","style","textAlign","fontSize","round","singleWeather","main","temp","weather","marginBottom","marginTop","border","src","icon","alt","align","dt_txt","dt","WeatherList","city","name","map","w","i","cl","App","state","setState","target","value","prevProps","prevState","a","baseURL","replace","axios","get","response","data","list","slice","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAEqBA,E,4MACnBC,iBAAmB,SAACC,GAClBA,EAAMC,kB,4CAGR,WAAU,IAAD,OACP,OACE,sBAAMC,SAAUC,KAAKJ,iBAArB,SACE,qBAAKK,UAAU,gBAAf,SACE,qBAAKA,UAAU,YAAf,SACE,uBACEC,WAAY,SAACL,GACO,UAAdA,EAAMM,KACR,EAAKC,MAAMC,QAAQR,IAGvBS,KAAK,OACLL,UAAU,eACVM,YAAY,4B,GAlBaC,a,QCoCxBC,EAnCF,SAACL,GACZ,OACE,sBAAKH,UAAS,iBAAYG,EAAMM,QAAhC,UACE,qBACET,UAAU,aACVU,MAAO,CAAEC,UAAW,SAAUC,SAAU,QAF1C,UAIGC,YAAMV,EAAMW,cAAcC,KAAKC,MAJlC,UAMA,oBAAIhB,UAAU,aAAaU,MAAO,CAAEC,UAAW,UAA/C,SACGR,EAAMW,cAAcG,QAAQ,GAAGF,OAElC,sBAAKf,UAAU,qBAAqBU,MAAO,CAAEQ,aAAc,OAA3D,UACE,qBACER,MAAO,CACLS,UAAW,OACXD,aAAc,OACdP,UAAW,SACXS,OAAQ,OAEVC,IAAG,4CAAuClB,EAAMW,cAAcG,QAAQ,GAAGK,KAAtE,WACHtB,UAAU,eACVuB,IAAI,YACJC,MAAM,WAER,qBAAKxB,UAAU,YAAf,SACE,oBAAIA,UAAU,aAAaU,MAAO,CAAEC,UAAW,UAA/C,SACGR,EAAMW,cAAcW,gBAzBkBtB,EAAMW,cAAcY,KCmExDC,EAnEK,SAACxB,GACnB,OACE,sBAAKH,UAAU,YAAf,UACE,qBAAKA,UAAU,6BAAf,SACE,qBAAKA,UAAU,YAAf,SACE,oBACEU,MAAO,CACLE,SAAU,OACVD,UAAW,SACXQ,UAAW,KACXD,aAAc,MALlB,SAQGf,EAAMyB,KAAKC,WAIlB,qBAAK7B,UAAU,MAAf,SACGG,EAAMc,QAAQa,KAAI,SAACC,EAAGC,GACrB,IAAIC,EAAK,EAET,OAAU,IAAND,GACFC,EAAK,IAGH,qBACEjC,UAAU,6BACVU,MAAO,CAAEC,UAAW,UAFtB,SAIE,cAAC,EAAD,CAAMG,cAAeiB,EAAGtB,OAAQwB,QAIpCA,EAAK,EACE,cAAC,EAAD,CAAMnB,cAAeiB,EAAGtB,OAAQwB,c,iBClC9BC,E,4MACnBC,MAAQ,CAAEP,KAAM,GAAIX,QAAS,GAAIb,QAAS,I,EAE1CA,QAAU,SAACR,GACT,EAAKwC,SAAS,CACZhC,QAASR,EAAMyC,OAAOC,S,+FAI1B,WAAyBC,EAAWC,GAApC,qBAAAC,EAAA,yDACM1C,KAAKoC,MAAM/B,UAAYoC,EAAUpC,QADvC,uBAEUsC,EAFV,6DAE0E3C,KAAKoC,MAAM/B,QAAQuC,QACvF,IACA,KAJN,iEAM2BC,IAAMC,IAAIH,GANrC,OAMUI,EANV,OAOUlB,EAAOkB,EAASC,KAAKnB,KACrBX,EAAU6B,EAASC,KAAKC,KAAKC,MAAM,EAAG,IAC5ClD,KAAKqC,SAAS,CACZR,KAAMA,EACNX,QAASA,IAXf,gD,6EAgBA,WACE,OACE,sBAAKjB,UAAU,YAAf,UACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,EAAD,CAAWI,QAASL,KAAKK,cAG7B,qBAAKJ,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,EAAD,CAAa4B,KAAM7B,KAAKoC,MAAMP,KAAMX,QAASlB,KAAKoC,MAAMlB,qB,GAnCnCiC,IAAM3C,W,MCAvC4C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6f825b9c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class SearchBar extends Component {\r\n  handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleFormSubmit}>\r\n        <div className=\"form-row mb-5\">\r\n          <div className=\"col-xs-12\">\r\n            <input\r\n              onKeyPress={(event) => {\r\n                if (event.key === \"Enter\") {\r\n                  this.props.getCity(event);\r\n                }\r\n              }}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Search a city\"\r\n            ></input>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { round } from \"mathjs\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className={`col-sm-${props.column}`} key={props.singleWeather.dt}>\r\n      <h1\r\n        className=\"card-title\"\r\n        style={{ textAlign: \"center\", fontSize: \"200%\" }}\r\n      >\r\n        {round(props.singleWeather.main.temp)}&#176;\r\n      </h1>\r\n      <h2 className=\"card-title\" style={{ textAlign: \"center\" }}>\r\n        {props.singleWeather.weather[0].main}\r\n      </h2>\r\n      <div className=\"card mb- shadow-sm\" style={{ marginBottom: \"15%\" }}>\r\n        <img\r\n          style={{\r\n            marginTop: \"-20%\",\r\n            marginBottom: \"-20%\",\r\n            textAlign: \"center\",\r\n            border: \"50%\",\r\n          }}\r\n          src={`https://openweathermap.org/img/wn/${props.singleWeather.weather[0].icon}@4x.png`}\r\n          className=\"card-img-top\"\r\n          alt=\"samplepic\"\r\n          align=\"middle\"\r\n        />\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\" style={{ textAlign: \"center\" }}>\r\n            {props.singleWeather.dt_txt}\r\n          </h5>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport { Table } from \"reactstrap\";\r\nimport { round } from \"mathjs\";\r\nimport Card from \"./Card\";\r\n\r\nconst WeatherList = (props) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-xs-12\">\r\n          <h1\r\n            style={{\r\n              fontSize: \"500%\",\r\n              textAlign: \"center\",\r\n              marginTop: \"5%\",\r\n              marginBottom: \"5%\",\r\n            }}\r\n          >\r\n            {props.city.name}\r\n          </h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        {props.weather.map((w, i) => {\r\n          let cl = 2;\r\n\r\n          if (i === 0) {\r\n            cl = \"4\";\r\n\r\n            return (\r\n              <div\r\n                className=\"row justify-content-center\"\r\n                style={{ textAlign: \"center\" }}\r\n              >\r\n                <Card singleWeather={w} column={cl} />\r\n              </div>\r\n            );\r\n          } else {\r\n            cl = 2;\r\n            return <Card singleWeather={w} column={cl} />;\r\n          }\r\n        })}\r\n\r\n        {/*  <Table>\r\n          <thead>\r\n            <tr>\r\n              <th></th>\r\n              <th>Date</th>\r\n              <th>Temperature</th>\r\n              <th>Sky</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {props.weather.map((w) => (\r\n              <tr key={w.dt}>\r\n                <td>\r\n                  <img\r\n                    src={`http://openweathermap.org/img/wn/${w.weather[0].icon}@2x.png`}\r\n                  />\r\n                </td>\r\n                <td>{w.dt_txt}</td>\r\n                <td>{round(w.main.temp)}</td>\r\n                <td>{w.weather[0].main}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherList;\r\n","import React from \"react\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport WeatherList from \"./WeatherList\";\r\nimport axios from \"axios\";\r\n\r\nexport default class App extends React.Component {\r\n  state = { city: [], weather: [], getCity: \"\" };\r\n\r\n  getCity = (event) => {\r\n    this.setState({\r\n      getCity: event.target.value,\r\n    });\r\n  };\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.getCity !== prevState.getCity) {\r\n      const baseURL = `https://api.openweathermap.org/data/2.5/forecast?q=${this.state.getCity.replace(\r\n        \" \",\r\n        \"+\"\r\n      )}&units=metric&appid=e367751780c81b487741413cc1056391`;\r\n      const response = await axios.get(baseURL);\r\n      const city = response.data.city;\r\n      const weather = response.data.list.slice(0, 15);\r\n      this.setState({\r\n        city: city,\r\n        weather: weather,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12\">\r\n            <SearchBar getCity={this.getCity} />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12\">\r\n            <WeatherList city={this.state.city} weather={this.state.weather} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}